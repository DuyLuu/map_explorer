name: Android Distribution

on:
  # Automatic triggers disabled - manual distribution only
  # push:
  #   branches: [ main, develop ]
  #   paths:
  #     - 'android/**'
  #     - 'src/**'
  #     - 'package.json'
  #     - '.github/workflows/android-distribution.yml'
  pull_request:
    branches: [main]
    paths:
      - 'android/**'
      - 'src/**'
  workflow_dispatch:
    inputs:
      release_notes:
        description: 'Release notes for this build'
        required: false
        default: 'New Android build from CI/CD'
      distribution_groups:
        description: 'Distribution groups (comma-separated)'
        required: false
        default: 'testers'

jobs:
  build-and-distribute:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Setup Android SDK
        uses: android-actions/setup-android@v3

      - name: Install dependencies
        run: npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Make gradlew executable
        run: chmod +x android/gradlew

      - name: Create release keystore
        run: |
          echo "${{ secrets.ANDROID_KEYSTORE_BASE64 }}" | base64 --decode > android/app/release.keystore
        if: env.ANDROID_KEYSTORE_BASE64 != ''
        env:
          ANDROID_KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}

      - name: Build Android APK
        run: |
          cd android
          ./gradlew assembleRelease
        env:
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}
          ANDROID_KEY_ALIAS: ${{ secrets.ANDROID_KEY_ALIAS }}
          ANDROID_KEY_PASSWORD: ${{ secrets.ANDROID_KEY_PASSWORD }}

      - name: Setup Firebase Service Account
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}" | base64 --decode > /tmp/firebase-service-account.json
          echo "GOOGLE_APPLICATION_CREDENTIALS=/tmp/firebase-service-account.json" >> $GITHUB_ENV
        env:
          FIREBASE_SERVICE_ACCOUNT_KEY: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_KEY }}

      - name: Distribute to Firebase App Distribution
        run: |
          cd android

          # Set release notes
          RELEASE_NOTES="${{ github.event.inputs.release_notes }}"
          if [ -z "$RELEASE_NOTES" ]; then
            RELEASE_NOTES="Build from commit: ${{ github.sha }}"
          fi

          # Set distribution groups
          GROUPS="${{ github.event.inputs.distribution_groups }}"
          if [ -z "$GROUPS" ]; then
            GROUPS="testers"
          fi

          # Find APK file
          APK_FILE=$(find app/build/outputs/apk/release -name "*.apk" | head -1)

          if [ -z "$APK_FILE" ]; then
            echo "‚ùå APK file not found"
            exit 1
          fi

          echo "üì± Distributing APK: $APK_FILE"
          echo "üìù Release notes: $RELEASE_NOTES"
          echo "üë• Groups: $GROUPS"

          # Distribute using Firebase CLI
          firebase appdistribution:distribute "$APK_FILE" \
            --app "1:264542140465:android:6c4f95fef8e056c94abd10" \
            --groups "$GROUPS" \
            --release-notes "$RELEASE_NOTES"

      - name: Upload APK as artifact
        uses: actions/upload-artifact@v4
        with:
          name: android-apk
          path: android/app/build/outputs/apk/release/*.apk
          retention-days: 30

      - name: Cleanup
        if: always()
        run: |
          rm -f /tmp/firebase-service-account.json
          rm -f android/app/release.keystore

      - name: Comment on PR
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: 'ü§ñ **Android Build Complete!** üì±\n\nThe Android APK has been built and distributed to Firebase App Distribution.\n\n‚úÖ Check the [Firebase Console](https://console.firebase.google.com/project/world-explorer-c13fd/appdistribution) for the latest build.'
            })
